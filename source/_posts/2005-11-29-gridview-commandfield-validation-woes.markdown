--- 
layout: post
title: GridView CommandField Validation woes
date: "2005-11-29"
comments: true
link: false
---
<p>Today I was working with a simple form, a single textbox at the top with a button for adding items, and a gridview below for editing/deleting.</p><p>With 2.0&rsquo;s validation groups, we can have validation on the &ldquo;Add&rdquo; form by setting <em>validationgroup=&rsquo;AddGroup&rsquo; </em>and we can have our CommandField column of the GridView have <em>validationGroup=&rsquo;editDelete&rsquo;</em>.&nbsp; Ideally this will separate the 2 actions into their own validation groups and they won&rsquo;t bother each other.</p><p>Well, if you are using ImageButtons instead of LinkButtons for your CommandField, there is&nbsp;a slight problem.&nbsp; The ImageButton actually gets instantiated as DataControlImageButton, which cannot use the <em>CausesValidation </em>property.&nbsp; Here&rsquo;s what happens:</p><p><img height="228" alt="DumbException" src="http://ben.lyntonweb.com/blog/uploads/dumbException_small.jpg" width="500" border="1" /></p><p>Now why does this generate a <strong>NotSupportedException</strong>?&nbsp; This is a perfectly valid scenario for validation?&nbsp; In this particular case I do not care about the edit/delete validation, but I do care about the Add validation.&nbsp; </p><p>If I change this scenario to work with LinkButton or just Plain Button, it all works out fine.</p><p>I have another rant regarding this same concept.&nbsp; The above screenclip is showing the RowDataBound event handler, and I am looping through the controls in the last column of the GridView.&nbsp; Now the last column is going to be the CommandField, so I know that there will be some commandcontrols in there.&nbsp; At this point I should not care whether it is a Button, an LinkButton, or an ImageButton because I will be treating them all the same:&nbsp; I will compare their <em>CommandName</em> properties<em> </em>to see what they are doing.&nbsp; So why can&rsquo;t I just cast the control as Button?&nbsp; Well ImageButton doesn&rsquo;t even derive from Button!&nbsp; I am sure there are reasons for that, but I don&rsquo;t see them.&nbsp; This means I have to recompile my code if some UI guy decides they want a link instead of an image for their Edit command.&nbsp; Dumb, I say.&nbsp; An ImageButton, by nature, is a button, not an image.&nbsp; It&rsquo;s behavior is a button.&nbsp; The way we treat it as developers is just like a button.&nbsp; It&rsquo;s <em>view</em> or <em>representation</em> however is an Image, just like a standard button has a raised, rounded rectange as its <em>view.</em>&nbsp; Someone please explain to me why I&rsquo;m wrong&hellip;.</p><p><strong>Now playing:</strong> <a href="http://phobos.apple.com/WebObjects/MZSearch.woa/wa/advancedSearchResults?artistTerm=Jimi Hendrix">Jimi Hendrix</a> - <a href="http://phobos.apple.com/WebObjects/MZSearch.woa/wa/advancedSearchResults?songTerm=Red House&amp;artistTerm=Jimi Hendrix">Red House</a></p>
