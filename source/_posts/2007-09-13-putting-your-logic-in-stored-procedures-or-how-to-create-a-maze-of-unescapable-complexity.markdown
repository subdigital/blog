--- 
layout: post
title: Putting your Logic in Stored Procedures OR How to Create a Maze of Unescapable Complexity
date: 2007-9-13
comments: true
link: false
---
My friend <a href="http://aspadvice.com/blogs/azamsharp/archive/2007/09/12/Business-Logic-in-Stored-Procedure_2100_-Sometimes-Beneficial.aspx">Azam</a> just hit a nerve.&nbsp; One of my pet peeves is the fact that some people clutch to stored procedures and claim it to be the <b>one place to hold the true state and logic of a system</b>.&nbsp; I have worked with such a DBA, and it was not very fun.<br><br>Anyway, he makes the claim that it is easier to make a tiny change to a stored procedure than to make the change in code, recompile, and upload the new version of the application to the servers.&nbsp; He gives this example:<br><br><blockquote><i>Let's say that you have some code to display all the users whoenrolled&nbsp;within the past 7 days. You implement it using some OR Mapperand the domain contains the logic for pulling out the users enrolledwithin the past 7 days. Everything worked fine! Now, the client comesand ask you that he needs to view the users enrolled in the past 14days (Let's assume for the sake of discussion that we don't have the UIto select the number of days). Now, you have to change the code in thedomain model and then upload the new version of the application.</i></blockquote><br><br>I have to disagree.&nbsp; While the impedance to making a change is usually smaller by updating a stored proc, a change is a change is a change.<br><br>Most production enviornments I have worked in are guarded by a machine-gun weilding fairy with a SOX t-shirt on that won't let me run an innocent little script without getting the blood of 14 virgins and my manager's approval.&nbsp; So sometimes the actual process of making a change overshadows the change itself.<br><br>2nd, when the next developer goes to review the code, shouldn't he/she know EXACTLY where the business logic is?&nbsp; I would argue that the largest cost in this scenario is the maintenance cost of the poor developer who doesn't know where to look for a change.&nbsp; It could take an entire day of searching to find out exactly where that rule is being defined.<br><br>If the value in question (the number of days) was identified to be a possible changing value, then place it in a config file so that the application can change on the fly without having to jump through burning hoops of fire.<br><br>Anyway, like I said, this is one of my pet peeves, so if you enjoy working with elegant software, don't put logic in your database.&nbsp; Keep it in your domain layer where it belongs.<br><p></p>
