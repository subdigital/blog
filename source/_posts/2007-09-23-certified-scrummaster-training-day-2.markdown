--- 
layout: post
title: Certified ScrumMaster Training - Day 2
date: 2007-9-23
comments: true
link: false
---
<p>Day 2 of the class went right into it and had a lot of good, hands-on excercises.&nbsp; Here are some notes from the day:</p><p><strong>Team</strong></p><ul><li>Includes everyone required to deliver the &ldquo;slice of the pie&rdquo;&nbsp; (the functionality for the sprint)</li><li>Extended teams are teams that you have to interface with to deliver your software.&nbsp; Peripheral teams may be doing waterfall and include vendor and/or teams external to the company.</li><li>The core team should all be co-located, and shouldn&rsquo;t be interrupted during a sprint</li><li>All teams go through the forming, storming, norming, and <strong>performing</strong>&nbsp;phase&hellip; even teams built with experienced scrum members.&nbsp; Team dynamics are always different.&nbsp; Mark (the trainer) wanted to stress that there is an additional phase here called &ldquo;Adjourning.&rdquo;&nbsp; This implies that you have to let go of your previous team if it&rsquo;s not bringing value.&nbsp; Don&rsquo;t do things a certain way just because &ldquo;that&rsquo;s how we did it last time.&rdquo;</li><li>Good Scrum Coaches address problems by holding up a mirror rather than a stick.&nbsp; Get the team talking and let them come to a solution.&nbsp; Good coaches know how to set things up to get them talking and then shutup.</li><li>Recommended books:&nbsp; <a href="http://www.amazon.com/Project-Retrospectives-Handbook-Team-Reviews/dp/0932633447/ref=pd_bbs_sr_1/105-3491950-7742804?ie=UTF8&amp;s=books&amp;qid=1190593323&amp;sr=1-1" target="_blank">Project Retrospectives</a> by Norman Kerth, and <a href="http://www.amazon.com/Agile-Retrospectives-Making-Teams-Great/dp/0977616649/ref=pd_bbs_sr_1/105-3491950-7742804?ie=UTF8&amp;s=books&amp;qid=1190593277&amp;sr=8-1" target="_blank">Agile Retrospectives</a> by Esther Derby, Diana Larsen, and Ken Schwaber.</li><li>Role of Managers often comes into question in Scrum.&nbsp; Are they pigs or chickens?</li><ul><li>Most of the time chickens</li><li>sometimes the product owner /&nbsp;customer, but depends on the project</li><li>Managers still have forsight of team impediments, so they can be very valuable.</li><li>Managers help the ScrumMaster remove impediments to the team</li></ul><li>Scrum scales via Scrum of Scrums</li><ul><li>1&ndash;2 Members from each team are part of Scrum of Scrums.&nbsp; Important to get the right people in the room (need problem solvers and cross-functional SMEs)</li><li>goal is to re-sync team efforts, share impediments (find common ones)</li><li>helpful to have someone of VP level present so that common impediments can be taken care of quickly</li><li>&ldquo;Distributed teams are hard.&nbsp; Period.&nbsp; Scrum doesn&rsquo;t make them any easier.&rdquo;</li></ul><li>Distributed Teams</li><ul><li>NEVER as productive as co-located teams.</li><li>90% of communication is non-verbal so stand-ups over the phone are hard</li><li>Effective distributed teams START co-located, then distribute.</li><li>Spend the investment to bring people together or &ldquo;accept it and <strong>have bad teams</strong>.&rdquo;</li><li>The best distributed Scrum teams share a product backlog and task list (via tools or Spreadsheet) so that they still feel part of the same team.</li></ul><li>User stories</li><ul><li>Stories are not contracts.</li><li>Rather they are a placeholder for future conversation</li><li>Stories are not Requirements!&nbsp; Requirements are meant for defined system behavior for contractual purposes and not business-user friendly.&nbsp; User strories are meant so that business users understand them.</li><li><strong>INVEST</strong> in good user stories that are</li><ul><li>Independent</li><li>Negotiable</li><li>Valuable</li><li>Estimatable</li><li>Small</li><li>Testable</li></ul><li>Stories can be large at first (called Epics) then are broken down into (Themes), then finally into stories.&nbsp;Epics or themes never make it into the sprint, so break them down as soon as you can.</li><li>Purpose of stories:&nbsp; (3 C&rsquo;s)</li><ul><li>Card</li><li>Conversation</li><li>Confirmation</li></ul></ul><li>Estimating</li><ul><li>Use story points (or gummi bears&hellip; whatever) rather than hours.&nbsp; Hours decay.&nbsp; You don&rsquo;t want to have to re-estimate because your initial estimates were wrong.&nbsp; If you estimate that you can accomplish 24 story points and you only get 18, then you can only count on getting 18 the next sprint.&nbsp; If you estimate a task at 4 hours and it takes 8, then what about the other 4 hours tasks on the board?</li><li>Planning accuracy</li><ul><li>20% of the efforts gives you 80% of the benefit</li><li>Planning beyond that yields little return</li><li>&ldquo;Plans are useless. Planning is everything.&rdquo; &ndash; Eisenhower.</li></ul></ul></ul><p>The course was AWESOME and I strongly encourage others to take the course if you are interested in agile/scrum.</p><p>Afterwards we took Mark Pushinsky and Kert Peterson out to dinner and shared some stories and laughs.&nbsp; I hope to see these guys again in the future.<br /></p><p>(oh yeah, and Jimmy and I worked on something super secretive during our free time on this trip&hellip; more on that later on)</p>
