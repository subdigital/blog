--- 
layout: post
title: ASP.NET Essentials - The Label
date: 2007-6-19
comments: true
link: false
---
<p>After talking to developers for a few days about basic HTML and ASP.NET topics, I find that I always focus on the <strong>Label</strong> control.</p><p>More specifically, I&rsquo;m talking about the `&lt;label&gt;` tag in HTML.&nbsp; What does this tag do?&nbsp; Why should we care, when we can just write the text before an input control on the page?</p><p>For starters, the label has semantic meaning.&nbsp; The `&lt;label&gt;` tag gives meaning to a textbox or a dropdown.&nbsp; If you were blind and browsing using a screen reader, you&rsquo;d appreciate the little semantic tidbits that give you an easier browser experience.</p><p>Another benefit is that we can select and style the label easily, making the transition to table-less forms so much easier.</p><p>A third and possibly more useful benefit is that the mouse stays as a pointer, and clicking on the text sets the focus to the corresponding control.</p><p>The usage in standard HTML is like this:</p><p>`{% codeblock %}&lt;label for='user_name'&gt;User Name:&lt;/label&gt;&lt;input type='text' id='user_name' /&gt;{% endcodeblock %}`<p></p>This results in the following example: <p><label for="'user_name'">User Name:</label> <input id="'user_name'" type="'text'"> </p><p>(notice how the mouse cursor stays as a pointer, instead of the standard text cursor)</p><p>If you were a reasonable person, you&rsquo;d think that the `&lt;asp:label&gt;` control would render as an HTML `&lt;label&gt;`, but you&rsquo;d be wrong.&nbsp; ASP.NET renders a standard `&lt;asp:label&gt;` as a `&lt;span&gt;`.&nbsp; ASP.NET 2.0 fixed this, however you have to specify the `AssociatedControlID` property to change the rendering behavior.</p><p>This leads me to another point that I&rsquo;d like to make with the <strong>Label</strong> control.&nbsp; Often times we just want a static label, like in the example above.&nbsp; If we use the &lt;asp:label&gt; then we&rsquo;ll have a server-side component as well and a viewstate hit.</p><p><a href="http://www.flux88.com/uploads/label_render.JPG"><img src="/images/label_render_thumb_.jpg" alt="Label_render"  border="0"  /></a></p><p>We certainly don&rsquo;t need viewstate in this scenario,&nbsp; Often times we just neglect these things until they are a problem.&nbsp; </p><p>I can hear you say it now&hellip; &ldquo;but Ben, you can disable Viewstate by specifying EnableViewState=&rsquo;false&rsquo; &ldquo;&hellip;&nbsp; I know you can.&nbsp; But it&rsquo;s too easy to just leave it as is.&nbsp; There&rsquo;s also an easy alternative.</p><p>You can accomplish the same rendering without the viewstate issue by just typing this:</p><p>`&lt;label for='&lt;%= txtUsername.ClientID %&gt;'&gt;User Name:&lt;/label&gt;`</p><p>This will render the same way, but also ensure that we get the generated ID of the control that we are associating with.&nbsp; This will not have any server-side component or any correlation to ViewState, and it is actually less characters to type.</p><p>Hope you find this information useful!</p>
