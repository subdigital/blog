--- 
layout: post
title: ASP.NET MVC or Scott Guthrie is My Hero
date: 2007-10-9
comments: true
link: false
---
<p><font>The collective jaws were dropped at ALT.NET.&nbsp; Just about everyone attended this talk by Scott Guthrie.&nbsp; If you’d like to watch this, Scott Hanselman has recorded the video and posted on his blog.</font></p><p><font><img src="/images/ScottGu_2DMVC_small_.jpg" alt="ScottGu-MVC"  border="0" /></font></p><p><font>Rather than regurgitate it all here, I’ll quickly summarize what it’s like.</font></p><p><font>Remember HTML?&nbsp; Yeah, that.&nbsp; We are going back to our roots and back to the model that the web really lives in, not a psuedo, event-driven state-based model that is ASP.NET Web Forms.</font></p><p><font>Why don’t we like ASP.NET Web Forms?&nbsp; I do like it, but it does have it’s problems.&nbsp; The benefits of ASP.NET often cause other concerns to rise up.&nbsp; Tired up re-populating data on the form?&nbsp; Here’s some Viewstate for you.&nbsp; Of course Viewstate causes page sizes to explode because most people just leave it on, even for read-only pages with no post-backs.&nbsp; Think of a grid that you place on a page.&nbsp; If you don’t have to postback to the same page again (like with a command field or something) then you can turn viewstate off and have a savings of almost 2X!&nbsp; I for one think that ViewState <em>can</em> be awesome, but it is more likely abused than leveraged.&nbsp; This is a pain point for many people.</font></p><p><font>The entire postback model, combined with the event-driven model is something that I have had to learn in-depth the hard way.&nbsp; I really don’t think any of that knowledge is really helpful at all outside of ASP.NET.&nbsp; I spent a crapload of time trying to get server controls to work in the complicated ASP.NET lifecycle, and does that knowledge transfer?&nbsp; Probably not.</font></p><p><font>Lastly I think that ASP.NET’s templated control syntax often requires an equal or even more lines of code than the actual HTML would take in the first place!&nbsp; Take the GridView for example.&nbsp; Sure it’s great and it lets you bind data and get columns autogenerated for you, but take a look of that list of properties.&nbsp; There is so much there that you almost need a degree in GridViews to be effective with it.</font></p><p><font>Microsoft has been paying attention to the community.&nbsp; We’ve been readily ditching ASP.NET Web Forms in favor or Ruby on Rails or MonoRail.</font></p><p><font>ScottGu presented the new MVC framework (codenamed <em>Scalene</em>) to a huge audience.&nbsp; There was a lot of trash talking (in a good way) between ScottGu and Scott Bellware.&nbsp; It’s not easy to take blundt criticism from people like ScottB, but The Gu took it incredibly well and even dished it out a bit.</font></p><p><font>What I really liked about ASP.NET MVC is that there isn’t that much to it.&nbsp; Here’s what you’d need to do to start using it on your project (exisitng or new):</font></p><ul><li><font>Add the System.Web.MVC.dll (or however it will be packaged — no installer exists yet)</font></li><li><font>Add 1 HttpHandler to handle a new extension</font></li><li><font>Add 1 HttpModule, which provides all of the routing and black magic of MVC</font></li></ul><p><font>Create a controller class, like this:</font></p><div style="background: rgb(244, 244, 244) none repeat scroll 0%; font-size: 16pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-family: Consolas;"><p style="margin: 0px;"><span style="color: green;">//This example is for you, Jacob Lewallen :)</span></p><p style="margin: 0px;"><span style="color: blue;">public</span> <span style="color: blue;">class</span> <span style="color: rgb(43, 145, 175);">ClownsController</span> : <span style="color: rgb(43, 145, 175);">Controller</span></p><p style="margin: 0px;">{</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; [<span style="color: rgb(43, 145, 175);">ControllerAction</span>(DefaultAction = <span style="color: blue;">true</span>)]</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">void</span> List()</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ViewData = <span style="color: rgb(43, 145, 175);">Clown</span>.FindAll();&nbsp; <span style="color: green;">//you write this method or use Castle ActiveRecord for example</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; RenderView(<span style="color: rgb(163, 21, 21);">"List"</span><font color="#a31515">);</font></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</p><p style="margin: 0px;">&nbsp;</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span> <span style="color: blue;">void</span> SomethingSecret()</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; {</p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color: green;">//this cannot be accessed by a url&nbsp;<br></span><span style="color: green;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//because it doesn't have the attribute</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; }</p><p style="margin: 0px;">}</p></div><!--EndFragment--><p>Next you’ll need a view.&nbsp; You can use<font> aspx, Brail, or NVelocity as your templating language.&nbsp; That’s freaking great that you can choose.</font></p><p><font>Here’s a quick example of an aspx view:</font></p><div style="background: rgb(244, 244, 244) none repeat scroll 0%; font-size: 16pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-family: Consolas;"><p style="margin: 0px;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">h1</span><span style="color: blue;">&gt;</span>Clowns<span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">h1</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;"><span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">table</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">tr</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span>Name<span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span>Number of Balloons<span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span>Likes Kids?<span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">th</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">tr</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;</p><p style="margin: 0px;">&nbsp;&nbsp; <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">&lt;%</span> for(var c in ViewData) { <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">%&gt;</span></p><p style="margin: 0px;">&nbsp;</p><p style="margin: 0px;">&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">tr</span><span style="color: blue;">&gt;</span></p><p style="margin:
0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span><span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">&lt;%</span><span style="color: blue;">=</span>c.Name<span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">%&gt;</span><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span><span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">&lt;%</span><span style="color: blue;">=</span>c.Balloons.Count.ToString() <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">%&gt;</span><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp;&nbsp; <span style="color: blue;">&lt;</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span><span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">&lt;%</span><span style="color: blue;">=</span>c.LikesKids? "yes" : "no" <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">%&gt;</span><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">td</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;&nbsp; <span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">tr</span><span style="color: blue;">&gt;</span></p><p style="margin: 0px;">&nbsp;</p><p style="margin: 0px;">&nbsp;&nbsp; <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">&lt;%</span> } <span style="background: rgb(255, 238, 98) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">%&gt;</span></p><p style="margin: 0px;"><span style="color: blue;">&lt;/</span><span style="color: rgb(163, 21, 21);">table</span><span style="color: blue;">&gt;</span></p></div><!--EndFragment--><p>Notice how I <em>get</em>&nbsp;to use standard HTML constructs, use code blocks to provide view functionality &amp; data, and I don’t have to mess with postback or viewstate at all because I don’t need it.&nbsp; </p><p><strong>Wait, you mean we have to learn HTML again?</strong>&nbsp; D.H.H. often reminds us that the HTML is provides beautiful constraints that he is happy to work inside of.&nbsp; We don’t have any naming containers here.&nbsp; In fact, we don’t have any unnecessary id elements at all!&nbsp; If we did, they would be <em>exactly</em> what we typed here, making javascript integration a lot easier.</p><p>To wrap this all up, a customizable route in the Global.asax will map the following url to render this page:</p><p><a href="http://your_url/clowns/list">http://your_url/clowns/list</a>&nbsp;&nbsp;&nbsp; &lt;—&nbsp; look how clean!</p><p>The framework knows how that the format is <a href="http://your_url/%5Bcontroller%5D/%5Baction%5D">http://your_url/[controller]/[action]</a> and so it instantiates your ClownsController and looks for an action called List().</p><p>So much more to talk about, but I’ll&nbsp;be posting more details once I get my hands on it.</p><div class="bjtags">Tags:<a rel="tag" href="http://technorati.com/tag/altnetconf">altnetconf</a>, <a rel="tag" href="http://technorati.com/tag/asp.net+mvc">asp.net+mvc</a></div>
