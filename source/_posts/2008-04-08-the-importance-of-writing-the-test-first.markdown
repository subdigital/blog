--- 
layout: post
title: The Importance of Writing the Test First
date: 2008-4-8
comments: true
link: false
---
<p>I had a skype call today with <a href="http://blog.wekeroad.com/" target="_blank">Rob Conery</a> and <a href="http://twitter.com/sbellware" target="_blank">Scott Bellware</a>&nbsp;(twitter) today to talk mainly about how to improve the &ldquo;TDD message&rdquo; of his <a href="http://blog.wekeroad.com/mvc-storefront/mvc-storefront-part-1/" target="_blank">latest ASP.NET</a> <a href="http://blog.wekeroad.com/mvc-storefront/asp-net-mvc-mvc-storefront-part-2/" target="_blank">screencasts</a>.</p><p>One of the points of feedback Rob got on his screencast is that he had stubbed the code he wanted to test before actually writing the test.&nbsp; While there was no &ldquo;meat&rdquo; of the code he wrote, there was still code.&nbsp; And that code had some sort of design baked in already.</p><p>The topic in question was about Products.&nbsp; Rob had a fictitious requirement that the discount should be displayed next to the price.&nbsp; So he created something like this as a stub:</p><p>`{% codeblock %}public class Product{	public float DiscountPercent { get; set; }	public decimal ListPrice { get; set; } 	public decimal AdjustedPrice 	{ 		get { return 0.0m; }	}	public decimal DiscountAmount	{		get { return 0.0m; }	}}{% endcodeblock %}`<p>The intent was to test that a discount was properly applied to the product.&nbsp; Of course, the test fails initially, and then you can easily go make it pass, but the first activity performed was stubbing out code, and that is <em>design</em>.</p><p>Instead, a failing test should show with absolute opactity that there is even a need for those properties.&nbsp; The fact that you&rsquo;ve written a <strike>test</strike>&nbsp;specification that says:</p><p><em>A Product with a discount percent of 10 and a list price of $100 should yield a discount amount of $10.</em></p><p>This becomes executable, and you know immediately that you have to implement those properties.&nbsp; </p><p>&ldquo;But wait?&rdquo; I can hear you say, &ldquo;&hellip;didn&rsquo;t you just come to the same end result?&rdquo;&nbsp; Well, yes, here I did.&nbsp; But what if while writing this code you realized that you really need to calculate this amount when you are calculating an order total, then you might introduce an order object.&nbsp; Or you might have a completely different need.&nbsp; The point here is that you shouldn&rsquo;t just assume&nbsp;that you&rsquo;ll need those 4 properties, or this 1 method, because you&rsquo;ll likely be wrong.</p><p>This also brings out the point of having good test naming.&nbsp; The test name should be so descriptive, it&rsquo;s like a rule for the application.&nbsp; Any new developer can come onto a project and decipher the meaning &amp; intent of broken tests.&nbsp; That is a very valuable thing to have.</p><p>If you recall the original fictitious requirement, it was &ldquo;the discount should be displayed next to the price&rdquo; you can see that it is a UI requirement.&nbsp; It doesn&rsquo;t necessarily dictate the model that you must use.</p><p>In fact, you might even come to the conclusion to use a data transfer object as a presentation model and then this piece of information could literally come from anywhere.</p><p><strong>TDD is about design</strong>.&nbsp; You&rsquo;ve heard that a million times.&nbsp; The obvious corollary benefit is the enforced existence of automated tests for every possible specification.&nbsp; Even if you intend to write the tests immediately afterwards, you may have missed out on some critical aspects of design, such as loose coupling, or eliminating waste.&nbsp; You&rsquo;re also tempted to just not write tests at all.</p><p>If you skip on the test-first nature of TDD, then you&rsquo;re really just unit testing, and you&rsquo;re missing out on the real design benefits of TDD.</p><p>I also want to point out that I&rsquo;m not picking on Rob.&nbsp; He&rsquo;s had&nbsp;<a href="http://twitter.com/sbellware/statuses/785180922" target="_blank">way</a> <a href="http://twitter.com/sbellware/statuses/785181761" target="_blank">too</a> <a href="http://twitter.com/codinghorror/statuses/784783370" target="_blank">much</a> of that.&nbsp;&nbsp; I think he&rsquo;s doing a great job and (if done correctly) he can definitely reach a larger audience than I can, seeing that he works for Microsoft.&nbsp; I also think it takes guts to submit your work to the world and, in the face of some pretty harsh criticisms, stand up and say&hellip; &ldquo;Hey, why don&rsquo;t you get on skype and we can talk about how much I suck!&rdquo; &mdash; Keep it up, Rob!</p><p>So here&rsquo;s a challenge:&nbsp; those of you who think that Rob did a &ldquo;disservice&rdquo; to the community, I&rsquo;d like to see your screencast on the subject.&nbsp; Obviously there is a gaping void instead of widespread adoption, so we as a community could definitely use the material.</p><div class="bjtags">Tags:<a rel="tag" href="http://technorati.com/tag/TDD">TDD</a></div>
