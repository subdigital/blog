--- 
layout: post
title: Precompiling ASP.NET Applications And The Dreaded LoadResource Failure Error
date: 2008-7-2
comments: true
link: false
---
<p>This is a very strange problem that burned quite a bit of my time last week.&nbsp; Hopefully this will be found by someone else with a similar dilemma.</p><p>Basically I&rsquo;ve got a central web application project that I use to house user controls to be shared by many applications.&nbsp; To accomplish this, I&rsquo;ve followed <a href="http://odetocode.com/Blogs/scott/archive/2005/10/06/2326.aspx" target="_blank">this post</a> by&nbsp;K. Scott Allen (of OdeToCode fame).</p><p>Since precompiling an ASP.NET project produces (at least) one funkily-named dll, I decided to ILMerge it with the code-behind assembly.&nbsp; So the process looks like this:</p><p>After-build:</p><ul><li>Precompile the website, updatable=false, into a temporary directory</li><li>Merge App_Web*.dll &amp; my project assembly together into one</li><li>Reference this in another project &amp; use the controls</li></ul><p>If you look at this dll in reflector, you get something like this:</p><p><img src="/images/reflector1_.png" alt="Reflector1"  border="0"  /></p><p><em>As a side-note, If you haven&rsquo;t ever tried doing this before then you should know that you have to reference the compiled user control classes from the ASP namespace in your pages&hellip; so in this example &lt;cc1:keywordgrid_ascx /&gt; rather than &lt;cc1:KeywordGrid /&gt;.</em></p><p>This first control worked just fine.&nbsp; It was basically a custom GridView control.&nbsp; Then I added that next control, SelectKeywords.&nbsp; Adding it caused the assembly to crash upon loading, i.e. even when we weren't using SelectKeywords it was crashing pages that used KeywordGrid.&nbsp; The error:</p><p><img src="/images/error1_.png" alt="Error1"  border="0"  /></p><p>This happened in the constructor of any control in the assembly.&nbsp; Digging a little deeper into the error, I found that this happens when your user control has literal content in it that gets embedded as a Win32 resource file during precompilation.</p><p>In reflector, this is what it looked like:</p><p><a href="http://www.flux88.com/uploads/reflector2.png"><img src="/images/reflector2_thumb_.jpg" alt="Reflector2"  border="0"  /></a></p><p>When building the control tree, the compiler was embedding literal content as a resource.&nbsp; To try and fix the issue, I started removing literal content.&nbsp; Bit-by-bit I removed some HTML until the error went away.&nbsp; This is what reflector looked like when it was working:</p><p><a href="http://www.flux88.com/uploads/reflector3.png"><img src="/images/reflector3_thumb_.jpg" alt="Reflector3"  border="0"  /></a></p><p>But where is this resource file?&nbsp; Clearly the assembly is referencing <em>some resource file</em> somewhere, right?&nbsp; I peeked into Temporary ASP.NET Files to find the answer.</p><p><img src="/images/temp_2Daspnet_2Dfiles_.png" alt="Temp-aspnet-files"  border="0"  /></p><p>If you open this up in Notepad, you&rsquo;ll find your missing literals!</p><p><img src="/images/notepad_2Dresource_.png" alt="Notepad-resource"  border="0"  /></p><p>For some reason, this file wasn&rsquo;t making it into the final assembly.&nbsp; </p><p>So if you have more than 256 characters of contiguous literal content, the compiler will put this into a resource file (likely for perf reasons).&nbsp; Sadly there is no way to turn this off.&nbsp; </p><p>I&rsquo;m not sure if ILMerging the assembly was the reason why this was getting lost, but luckily <a href="http://blogs.msdn.com/davidebb/" target="_blank">David Ebbo</a> from Microsoft was able to provide me with a couple of options.</p><ol><li>You can break up the literal content by injecting empty code blocks like <code style="BACKGROUND-COLOR: yellow">&lt;% %&gt;</code> but who would really want to do that?</li><li>You can fake out the compiler &amp; supply a code provider that claims to not support Win32 Resource files.&nbsp; This is what I chose.</li></ol><p>I created a class (of course in another assembly, otherwise you have a chicken-and-egg problem):</p><p><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas"><span style="COLOR: blue">public</span> <span style="COLOR: blue">class</span> <span style="COLOR: rgb(43,145,175)">CustomCodeDomProviderWithoutWin<wbr>32ResSupport</span> : <span style="COLOR: rgb(43,145,175)">CSharpCodeProvider<br /></span></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">{<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">public</span> <span style="COLOR: blue">override</span> <span style="COLOR: blue">bool</span> Supports(<span style="COLOR: rgb(43,145,175)">GeneratorSupport</span> generatorSupport)<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp; {<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">if</span> ((generatorSupport &amp; <span style="COLOR: rgb(43,145,175)">GeneratorSupport</span>.Win32Resources) == generatorSupport)<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">return</span> <span style="COLOR: blue">false</span>;</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;</span></p><p><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">return</span> <span style="COLOR: blue">base</span>.Supports(generatorSupport);<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp; }<br /></span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">}</span></p><p>To get the precompiler to use this new class, add this to your web.config:</p><p><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&lt;</span><span style="FONT-SIZE: 12pt; COLOR: rgb(163,21,21); FONT-FAMILY: Consolas">system.codedom</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&gt;<br /></span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp; &lt;</span><span style="FONT-SIZE: 12pt; COLOR: rgb(163,21,21); FONT-FAMILY: Consolas">compilers</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&gt;<br /></span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span><span style="FONT-SIZE: 12pt; COLOR: rgb(163,21,21); FONT-FAMILY: Consolas">compiler</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas"> </span><span style="FONT-SIZE: 12pt; COLOR: red; FONT-FAMILY: Consolas">language</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">=</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Consolas">"<SPAN style="color: blue">c#;cs;csharp</SPAN>"<span style="COLOR: blue"> </span><span style="COLOR: red">extension</span><span style="COLOR: blue">=</span>"<SPAN style="color: blue">.cs</SPAN>"<span style="COLOR: blue"> </span><span style="COLOR: red">type</span><span style="COLOR: blue">=</span>"<SPAN style="color: blue">MyAssembly.CustomCodeDomProvide<WBR>rWithoutWin32ResSupport, MyAssembly</SPAN>"<span style="COLOR: blue"> </span><span style="COLOR: red">warningLevel</span><span style="COLOR: blue">=</span>"<SPAN style="color: blue">1</SPAN>"<span style="COLOR: blue"> /&gt;<br /></span></span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&nbsp;&nbsp;&nbsp; &lt;/</span><span style="FONT-SIZE: 12pt; COLOR: rgb(163,21,21); FONT-FAMILY: Consolas">compilers</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&gt;<br /></span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&lt;/</span><span style="FONT-SIZE: 12pt; COLOR: rgb(163,21,21); FONT-FAMILY: Consolas">system.codedom</span><span style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Consolas">&gt;</span></p><p>Now my user controls can have as much literal content as they need and resources will not get added.&nbsp; I&rsquo;d like to thank <a href="http://blogs.msdn.com/davidebb/"
target="_blank">David Ebbo</a> for his assistance in helping me figure this out.&nbsp; Thanks David!</p>
