--- 
layout: post
title: TransactionScope + MSDTC + Windows 2000
date: 2006-6-28
comments: true
link: false
---
<p>For my data access unit tests, I am a huge fan of the new System.Transactions namespace in .NET 2.0.&nbsp; Basically I can define my unit tests like this:</p><div style="BORDER-RIGHT: #333 1px solid; BORDER-TOP: #333 1px solid; FONT-SIZE: 10pt; BACKGROUND: white; BORDER-LEFT: #333 1px solid; COLOR: black; BORDER-BOTTOM: #333 1px solid; FONT-FAMILY: Consolas"><p style="MARGIN: 0px"><span style="COLOR: blue">using</span> System;</p><p style="MARGIN: 0px"><span style="COLOR: blue">using</span> NUnit.Framework;</p><p style="MARGIN: 0px"><span style="COLOR: blue">using</span> System.Transactions;</p><p style="MARGIN: 0px">&nbsp;</p><p style="MARGIN: 0px">[TestFixture]</p><p style="MARGIN: 0px"><span style="COLOR: blue">public</span> <span style="COLOR: blue">class</span> TestClass1</p><p style="MARGIN: 0px">{</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">private</span> TransactionScope _tx;</p><p style="MARGIN: 0px">&nbsp;</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; [Setup]</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">public</span> <span style="COLOR: blue">void</span> SetUp()</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _tx = <span style="COLOR: blue">new</span> TransactionScope();</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</p><p style="MARGIN: 0px">&nbsp;</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; [TearDown]</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">public</span> <span style="COLOR: blue">void</span> TearDown()</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _tx.Dispose();</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</p><p style="MARGIN: 0px">&nbsp;</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; [Test]</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; <span style="COLOR: blue">public</span> <span style="COLOR: blue">void</span> TestSaveSomeData()</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; {</p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="COLOR: green">//some code that inserts data into the database</span></p><p style="MARGIN: 0px">&nbsp;&nbsp;&nbsp; }</p><p style="MARGIN: 0px">}</p></div><p>Without the TransactionScope above, we would end up with a bunch of junk data in the database.</p><p>What&rsquo;s great about this method, is that &ndash; from the bottom layer &ndash; I can start a transaction, do all kinds of inserts/updates/deletes and even select from that data, and then roll the entire thing back when I&rsquo;m done.&nbsp; (Even in the event of failure).</p><p>What&rsquo;s not so nice is that TransactionScope uses MSDTC (Microsoft Distributed Transaction Coordinator) behind the scenes.&nbsp; This is fine locally as long as you have the service running on your machine.&nbsp; But what if you try to do this on a database on another server?</p><p>In my case I was connecting to a Windows 2000 Server on the local network.&nbsp; The MSDTC handshake was failing.&nbsp; This was due to security settings built into Windows XP SP2.</p><p>I received enourmous help from Florin Lazar&rsquo;s blog post:&nbsp;<a href="http://blogs.msdn.com/florinlazar/archive/2004/06/18/159127.aspx">http://blogs.msdn.com/florinlazar/archive/2004/06/18/159127.aspx</a></p><p>I opened up <em>Administrative Tools -&gt; Component Services</em> , right-clicked on <em>My Computer </em>and selected <em>Properties.</em>&nbsp; Under the <em>MSDTC</em> tab, I clicked <em>Security</em>.&nbsp; Then I enabled <em>Inbound and Outbound connections, and set the authentication to &ldquo;No Authentication Required&rdquo;.&nbsp; </em>That last part is kind of confusing, but basically it&rsquo;s required for pre-XP/2003 machines, such as NT or Windows 2000.</p><p>Now my transactions are running again.</p>
