--- 
layout: post
title: Digging into CAB - The Terminology
date: 2007-3-7
comments: true
link: false
---
<p>The Composite UI Application Block (or CAB for short) has a lot of terminology to understand.&nbsp; In order to follow the downloadable samples you should first brush up on what the various components of CAB are.</p><p><strong>Shell<br /></strong>The Shell is basically your application.&nbsp;&nbsp;The Shell&rsquo;s responsibility is to load and initialize UI services, modules, and other CAB components.&nbsp; The Shell itself won&rsquo;t contain many direct UI elements (these will be added later).&nbsp; The Shell will typically house <em>UIExtensionSites</em> and <em>Workspaces</em>.</p><p><strong>Module<br /></strong>Modules are basically packages of <em>WorkItem</em>s, which we will see next.&nbsp; Modules are defined in the ProfileCatalog.xml file so CAB can load them and they have constructs for initializing.&nbsp; Each module resides it its own assembly.</p><p><strong>WorkItem<br /></strong>Your use cases will generally become <em>WorkItems</em>.&nbsp; A <em>WorkItem</em> is a container for&nbsp;UI elements, model classes, state, and services that are required to satisfy the use-case.&nbsp; <em>If you were using NHibernate, this would be an ideal place to demarcate your ISession boundary.</em></p><p><strong>Workspace<br /></strong><em>Workspaces</em> are the containers on your UI that <em>SmartParts</em> (User Controls) can be loaded.&nbsp; Examples include DeckWorkspace, TabWorkspace, etc.&nbsp; <em>Workspaces</em> can be moved around and replaced at runtime easily.</p><p><strong>UI Extension Sites<br /></strong><em>UI Extension Sites</em> are static UI elements, such as Menus and Toolstrips, and as such are added directly to the shell.&nbsp; Different work items can access these to modify their contents.&nbsp; A good example is setting status text in a status bar at the bottom of the application shell or adding menu items depending on what tab has focus.</p><p><strong>SmartParts</strong><br /><em>SmartParts</em> are your basic user controls, only denoted with a `[SmartPart]` attribute.&nbsp; Think of these as the &ldquo;View&rdquo; in Model-View-Controller.&nbsp; As such, these will contain controls, however all logic will be deferred to a controller or presenter class.</p><p><strong>Service<br /></strong>As you might expect, <em>Services</em> are very vague.&nbsp; They can be any type of service that provides your UI with logic or data.&nbsp; In a CAB architecture, you will abstract most of the data and calculations to services that are consumed by the UI.&nbsp; Out of the box CAB comes with a Catalog service for loading modules, a State service for persisting WorkItem state to a file or isolated storage, and an authorization service.</p><p>&nbsp;</p><p>I think that gives us a good overview of the main terms and responsibilities.&nbsp; Until next time&hellip;</p>
