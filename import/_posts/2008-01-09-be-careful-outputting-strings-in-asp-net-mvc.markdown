--- 
layout: post
title: Be careful outputting strings in ASP.NET MVC
date: 2008-1-9
comments: true
link: false
---
<p><font style="BACKGROUND-COLOR: #f4f4f4">During my presentation at Alamo Coders last night, someon mentioned that it is unsafe to output user-entered strings like this:</font></p><font color="#0000ff"><p>&lt;</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</font>&lt;%<font color="#0000ff">=</font> college.Name %&gt;<font color="#0000ff">&lt;/</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</p></font><p>The reason is, of course, that the user could be malicious and enter in a string such as this:</p><p>&ldquo;&lt;script&gt;alert(&lsquo;I am evil&rsquo;);&lt;/script&gt;&rdquo;</p><p>And it would evaluated on the page and all of your users would get an alert box.&nbsp; This is leaving your door wide-open to clever attacks known as <a href="http://en.wikipedia.org/wiki/Cross_site_scripting" target="_blank">Cross Site Scripting</a>&nbsp;and is very dangerous.</p><p>Instead, we should escape these strings so that they aren&rsquo;t rendered as HTML or javascript, but rather textual characters.&nbsp; That means that &lt; will be translated to &amp;lt; and so on.</p><p>To do that, the Html helpers that ship with the framework give you an Encode method, letting you do something like:</p><font color="#0000ff"><p>&lt;</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</font>&lt;%<font color="#0000ff">=</font> Html.Encode(college.Name) %&gt;<font color="#0000ff">&lt;/</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</p></font><p>But the syntax is a bit cumbersome for <strong>every outputted value on a page.</strong>&nbsp; I prefer the way Rails handles it&hellip; like this:</p><font color="#0000ff"><p>&lt;</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</font>&lt;%<font color="#0000ff">=</font> h(college.Name) %&gt;<font color="#0000ff">&lt;/</font><font color="#a31515">h2</font><font color="#0000ff">&gt;</p></font><p>And it turns out that you can add this extension method somewhere and be done with it:</p><p>`{% codeblock %}public static string h(this ViewPage page, string input){ return new HtmlHelper(page.ViewContext).Encode(input);}`{% endcodeblock %}And that&rsquo;s it!&nbsp; Just remember to take this precaution, or you&rsquo;ll regret it later.
