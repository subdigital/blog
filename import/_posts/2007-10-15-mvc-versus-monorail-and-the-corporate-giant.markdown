--- 
layout: post
title: MVC versus MonoRail and the Corporate Giant
date: "2007-10-15"
comments: true
link: false
---
<p>A lot of buzz is going around about the MVC framework coming out of Microsoft.&nbsp; I posted about how cool it was and got a couple of comments that basically said:&nbsp;</p><blockquote>They just copied MonoRail.</blockquote><p>Well, yes.&nbsp; In a sense they did.&nbsp; And Rails.&nbsp; And Django.&nbsp; And another one that The Gu mentioned that I hadn&rsquo;t heard of.&nbsp; Is that a bad thing?&nbsp; If you&rsquo;re using MonoRail today, then you should continue to use it.&nbsp; Unless you like some of the different syntax or ability to mock the core ASP.NET Runtime objects.</p><p>The reason I think that ASP.NET MVC is so exciting and important is because I often come to clients that refuse to (or make it very difficult) to use non-MSFT produced thingies.&nbsp; Can I use Resharper?&nbsp; No, we gave you Visual Studio.&nbsp; Can I use NHibernate?&nbsp; No we use Enterprise Library.&nbsp; Can I use&nbsp;NAnt, StructureMap, MonoRail, SubSonic?&nbsp; Often times the answer is no.&nbsp; Recently I&rsquo;ve had experience where our team dumped eWorldUI in favor of ASP.NET Ajax Control Toolkit.&nbsp; The reason?&nbsp; Easier to get approved since it has Microsoft&rsquo;s name attached to it.&nbsp; It doesn&rsquo;t matter that eWorldUI is free and easy to implement.&nbsp; It matters because somebody sees eworldui.dll in a bin folder somewhere and everyone wants to know where it came from.</p><p>When you work in an organization with 10,000 employees that has widely adopted Microsoft as a technology platform, trying to get something approved like MonoRail is <strong>like trying to convince a Catholic priest that he&rsquo;s really a Mormon</strong>.&nbsp; <em>Ok so that doesn&rsquo;t really make much sense, but what I&rsquo;m getting across is that <strong>it&rsquo;s hard.</strong></em></p><p>Some of my readers have already gone down this route, and succeeded.&nbsp; And I commend you.&nbsp; But I have yet to get corporate adoption of something like that.&nbsp; Maybe it&rsquo;s my inability to convince people of the benefits, or sway their concerns about supportability and such.&nbsp; Or maybe I just work with very beligerant clients.&nbsp; </p><p><em>Some of my colleagues probably read this blog, so just so you know I&rsquo;m not talking about you&hellip; I&rsquo;m talking about <strong>the other guy</strong>. <img src="/images/smile3.gif"   />.</em></p><p>Back to my original argument.&nbsp; Since this is a new framework coming out of Microsoft, I will not have to fight to get it adopted.&nbsp; I can go in and say &ldquo;this is how it&rsquo;s done for <em>real</em> applications&rdquo; and have Microsoft guidance to back me up.&nbsp; Hell, some clients might even ask me for it!&nbsp; That&rsquo;ll be interesting.&nbsp; I can&rsquo;t imagine what it would be like for a client to come up to me and say &ldquo;hey I was thinking, maybe we should use NHibernate for this&hellip;&rdquo;</p><p>Thinking about that makes me kind of sad that it <em>hasn&rsquo;t </em>happened before.&nbsp;&nbsp;Am I just unlucky?&nbsp; Am I just not skilled at convincing?&nbsp; Or is this commonplace in the industry?</p><p><strong>System.Web.MVC will reach an audience that MonoRail doesn&rsquo;t:&nbsp; The corporate giant who already swallowed the pill and will do anything that Microsoft pushes, good or bad</strong>.&nbsp; And a&nbsp;lot of consultants work firmly in this space.</p><div class="bjtags">Tags:<a rel="tag" href="http://technorati.com/tag/asp.net+mvc">asp.net+mvc</a></div>
