--- 
layout: post
title: Team Development with ASP.NET Multiple Projects
date: 2005-3-4
comments: true
link: false
---
<div style="clear:both;"></div>I thought I'd share my little setup with the world. I have been googling my ass off trying to find out the best way to do what I need done, but I haven't had much luck.<br /><br />Basically here was my problem:<br /><ul> <li>Multiple Developers accessing the solution -- need multiple projects (this was before source control -- yuck).</li> <li>Different components in VB.NET / C# (can't combine languages until 2.0)<br /></li> <ul> <li>the previous code used single file aspx pages...(double yuck)<br /></li></ul> <ul> <li>need to maintain common directory structure as on live server<br /></li> </ul></ul> Now I read a solution somewhere that just said to keep adding projects underneath your web projects root directory, and remove the "application" in iis, remove global.asax & web.config and you're good to go. But wait, when you compile it leaves the .dll in the local \bin folder. I tried to set the output directory to the root bin folder, but Visual Studio didn't keep the changes. In fact, when I clicked apply it just reverted to "\bin" instead of " ..\..\bin"<br />I recieve a (stupid) suggestion from a website to add each project as a reference in the main project -- well this caused all 10 projects to be built each time I compiled... yuck.<br /><br />Finally, after a few problems of not being able to debug certain dll's, I started at the solution again.<a href="http://jolson.geekswithblogs.net">Jason Olson</a> recommended I try editing the project file directly with notepad. DAMNIT why didn't I think of this in the first place?!?! It worked like a charm!I'm not sure why Visual Studio compained about the output folder in the first place.In any case, I have been so used to just building all of the projects each time I wanted to compile, that it feels like the build speed is lightning fast!<div style="clear:both; padding-bottom: 0.25em;"></div>
